<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sPlayer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Initialize vars
jumpspeed = 7;
movespeed = 4;
hsp = 0;
vsp = 0;
depth = 10;
image_speed = .25;
global.Armed = false
key_down = 0;
kick = false
Timerr = 0
bhsp = 1
armed = false
Health = 25

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(oLightingController) {
    
    size = 700
    Size = size
    draw_set_blend_mode(bm_subtract)
    surface_set_target(global.light)
    draw_ellipse_color(x-Size/2-view_xview,y-Size/2-view_yview,x+Size/2-view_xview,y+Size/2-view_yview,c_white,c_black,false)
    
    surface_reset_target()
    draw_set_blend_mode(bm_normal)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>walking = keyboard_check(ord('D')) || keyboard_check(ord('A'));
airborne = !(vsp == 0); 

if (armed) {
    sprite_index = sPlayerArmed
} else { sprite_index = sPlayer } 

if hsp != 0 { image_xscale = -sign(hsp) image_speed = .25 } else { image_index = 0 image_speed = 0 }    

//if (airborne) image_index = sPlayerAirborn;
//else if (walking) sprite_index = sPlayerWalking;
//else sprite_index = sPlayerIdle;

// Player Colliding With Things
key_right = keyboard_check(ord('D'));
key_left = -keyboard_check(ord('A'));
key_jump = keyboard_check_pressed(ord('W'));
key_down = keyboard_check(ord('S'));

move = key_left + key_right;
hsp = move * movespeed;
if (place_meeting(x,y+1,oSolid)) if (key_jump) vsp = -jumpspeed;


if keyboard_check_pressed(vk_space) {
    kick = true
}

if kick = true {

    if hsp != 0 { bhsp = sign(hsp) }     
    
    grate = collision_line(x,y-25,x+(bhsp*30),y-25,oGrate,true,true)
    Box = collision_line(x,y-25,x+(bhsp*30),y-25,oBox,true,true)
    
    if instance_exists(grate) { with (grate) { instance_change(oGrateDented,true) physics_apply_impulse(x,y,oPlayer.bhsp * 300,0) } }
    if instance_exists(Box) { with (Box) { instance_destroy() } }
    if (armed) {
    sprite_index = sPlayerKickArmed
} else { sprite_index = sPlayerKick } 
    //hsp = 0
    //vsp = 0 
    Timerr += 1
    if Timerr &gt; room_speed * .1 {
        Timerr = 0
        kick = false
        }

}

Vert = collision_line(x,y,x,y+30,oGrate,true,true)

if instance_exists(Vert) and vsp &gt; 8 { vsp = 0 with (Vert) { instance_change(oGrateDented,true) physics_apply_impulse(x,y,0,500) } }  

if Health &lt; 25 { Health += .05 }




ScGravityAndCollision();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()

draw_set_color(c_white)

if hsp != 0 { bhsp = sign(hsp) }  

//if (global.debug) {draw_line(x,y-25,x+(bhsp*30),y-25)}

//if (global.debug) {draw_line(x,y,x,y+25)}

if (global.debug) {draw_text(x,y -50,string(Health))}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>1</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>-1</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sBullet</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//speed = 1
Die = false
ScTime()
h = 0
v = 0

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ScTime()

//Speed = 1
//Direction = random(360)

h = lengthdir_x(Speed, Direction)
v = lengthdir_y(Speed, Direction)
x += h * Time
y += v * Time

if place_meeting(x,y,oSolid) { instance_destroy() }

if Die = true { instance_destroy() }

image_angle = Direction

Bug = instance_place(x,y,oBugParent)

if instance_exists(Bug) { with (Bug) { ScBugDie() } }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_self()
if Time != 1 {
    
    var hx, hy, direc;
    hx = x + lengthdir_x(20 * Time,image_angle+180)
    hy = y + lengthdir_y(20 * Time,image_angle+180)
    draw_sprite_ext(sBullet,0,x + random_range(-3,3),y + random_range(-3,3),1 + random(.1),1 + random(.1),image_angle,c_white,1)
    draw_set_colour(c_yellow);
    draw_line_fade(x,y,hx,hy,1,0)

} else {
    
    var hx, hy, direc;
    hx = x + lengthdir_x(20 * Time,image_angle+180)
    hy = y + lengthdir_y(20 * Time,image_angle+180)
    //draw_sprite_ext(sBullet,0,x,y,1,1,image_angle,c_white,1)
    draw_sprite_ext(sBullet,0,x,y,1 + random(.1),1 + random(.1),image_angle,c_white,1)
    draw_set_colour(c_yellow);
    draw_line_fade(x,y,hx,hy,1,0)

}



if (global.debug) { draw_text(x,y,string(speed)) }  
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
